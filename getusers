import requests
from requests.auth import HTTPBasicAuth

# === Configuration ===

source_org = "CloudSteer"
dest_org = "rajeshtest01"
user_email = "dinesh.angadi@isteer.com"
pat = "90hKckYoHzqaqjrXkMoKzV7yJ5Kz4fbsAyOai5Innlw2y1rg3mSVJQQJ99BGACAAAAAGyXmFAAAGAZDOAbNJ"  # PAT must have access to both orgs


# === Setup ===
auth = HTTPBasicAuth("", pat)
headers = {"Content-Type": "application/json"}

# === Step 1: Get user identity descriptor in source org ===
identity_url = f"https://vssps.dev.azure.com/{source_org}/_apis/identities?searchFilter=General&filterValue={user_email}&queryMembership=Direct&api-version=7.1"
identity_response = requests.get(identity_url, headers=headers, auth=auth)

if identity_response.status_code != 200:
    print(f"❌ Failed to fetch identity for {user_email}")
    exit()

identity_data = identity_response.json()
if not identity_data["value"]:
    print("❌ No identity found for this user.")
    exit()

descriptor = identity_data["value"][0]["descriptor"]
member_of = identity_data["value"][0].get("memberOf", [])

print(f"User is member of {len(member_of)} groups in source org.\n")

# === Step 2: Get group display names ===
for group_descriptor in member_of:
    group_url = f"https://vssps.dev.azure.com/{source_org}/_apis/identities/{group_descriptor}?api-version=7.1"
    group_resp = requests.get(group_url, headers=headers, auth=auth)
    if group_resp.status_code == 200:
        group_name = group_resp.json().get("providerDisplayName", "Unknown")
        print(f"✔️ {group_name}")
    else:
        print(f"⚠️ Failed to fetch group for {group_descriptor}")
